package com.duopharma.models;
// Generated 25/02/2020 04:47:30 PM by Hibernate Tools 4.3.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.Lob;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Usuario generated by hbm2java
 */
@Entity
@Table(name = "usuario", catalog = "sifc_dev")
public class Usuario implements java.io.Serializable {

	private Integer usId;
	private Bodega bodega;
	private Rol rol;
	private Tipodocumento tipodocumento;
	private Usuario usuarioByUsUsuarioActualizador;
	private Usuario usuarioByUsIdUsuarioCreador;
	private String usNombreDeUsuario;
	private String usClave;
	private String usCorreo;
	private String usNombres;
	private String usApellidos;
	private Date usFechaCreacion;
	private Date usUltimaActualizacion;
	private byte[] usImagen;
	private String usEstado;
	private String usDireccion;
	private Integer usTelefono;
	private String usDocumento;
	private Set<Pedido> pedidosForPedClienteCliId = new HashSet<Pedido>(0);
	private Set<Pedido> pedidosForPedAutorizador = new HashSet<Pedido>(0);
	private Set<Usuario> usuariosForUsUsuarioActualizador = new HashSet<Usuario>(0);
	private Set<Usuario> usuariosForUsIdUsuarioCreador = new HashSet<Usuario>(0);
	
	private Set<Movimientomateria> movimientomaterias = new HashSet<Movimientomateria>(0);
	private Set<Lote> lotes = new HashSet<Lote>(0);
	private Set<Fichaanaliticamateria> fichaanaliticamaterias = new HashSet<Fichaanaliticamateria>(0);
	private Set<Fichaelaboracionproducto> fichaelaboracionproductos = new HashSet<Fichaelaboracionproducto>(0);
	private Set<Movimientoproducto> movimientoproductos = new HashSet<Movimientoproducto>(0);

	public Usuario() {
	}

	public Usuario(Bodega bodega, Usuario usuarioByUsUsuarioActualizador, Usuario usuarioByUsIdUsuarioCreador,
			String usNombreDeUsuario, String usClave, String usCorreo, String usNombres, String usApellidos,
			Date usFechaCreacion, Date usUltimaActualizacion, String usEstado) {
		this.bodega = bodega;
		this.usuarioByUsUsuarioActualizador = usuarioByUsUsuarioActualizador;
		this.usuarioByUsIdUsuarioCreador = usuarioByUsIdUsuarioCreador;
		this.usNombreDeUsuario = usNombreDeUsuario;
		this.usClave = usClave;
		this.usCorreo = usCorreo;
		this.usNombres = usNombres;
		this.usApellidos = usApellidos;
		this.usFechaCreacion = usFechaCreacion;
		this.usUltimaActualizacion = usUltimaActualizacion;
		this.usEstado = usEstado;
	}

	public Usuario(Bodega bodega, Usuario usuarioByUsUsuarioActualizador, Usuario usuarioByUsIdUsuarioCreador,
			String usNombreDeUsuario, String usClave, String usCorreo, String usNombres, String usApellidos,
			Date usFechaCreacion, Date usUltimaActualizacion, byte[] usImagen, String usEstado, String usDireccion,
			Integer usTelefono, String usDocumento, Set<Pedido> pedidosForPedClienteCliId, Set<Pedido> pedidosForPedAutorizador,
			Set<Usuario> usuariosForUsUsuarioActualizador, Set<Usuario> usuariosForUsIdUsuarioCreador) {
		this.bodega = bodega;
		this.usuarioByUsUsuarioActualizador = usuarioByUsUsuarioActualizador;
		this.usuarioByUsIdUsuarioCreador = usuarioByUsIdUsuarioCreador;
		this.usNombreDeUsuario = usNombreDeUsuario;
		this.usClave = usClave;
		this.usCorreo = usCorreo;
		this.usNombres = usNombres;
		this.usApellidos = usApellidos;
		this.usFechaCreacion = usFechaCreacion;
		this.usUltimaActualizacion = usUltimaActualizacion;
		this.usImagen = usImagen;
		this.usEstado = usEstado;
		this.usDireccion = usDireccion;
		this.usTelefono = usTelefono;
		this.usDocumento = usDocumento;
		this.pedidosForPedClienteCliId = pedidosForPedClienteCliId;
		this.pedidosForPedAutorizador = pedidosForPedAutorizador;
		this.usuariosForUsUsuarioActualizador = usuariosForUsUsuarioActualizador;
		this.usuariosForUsIdUsuarioCreador = usuariosForUsIdUsuarioCreador;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "usId", unique = true, nullable = false)
	public Integer getUsId() {
		return this.usId;
	}

	public void setUsId(Integer usId) {
		this.usId = usId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "usBodega_BoId", nullable = false)
	public Bodega getBodega() {
		return this.bodega;
	}

	public void setBodega(Bodega bodega) {
		this.bodega = bodega;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "usUsuarioActualizador", nullable = false)
	public Usuario getUsuarioByUsUsuarioActualizador() {
		return this.usuarioByUsUsuarioActualizador;
	}

	public void setUsuarioByUsUsuarioActualizador(Usuario usuarioByUsUsuarioActualizador) {
		this.usuarioByUsUsuarioActualizador = usuarioByUsUsuarioActualizador;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "usIdUsuarioCreador", nullable = false)
	public Usuario getUsuarioByUsIdUsuarioCreador() {
		return this.usuarioByUsIdUsuarioCreador;
	}

	public void setUsuarioByUsIdUsuarioCreador(Usuario usuarioByUsIdUsuarioCreador) {
		this.usuarioByUsIdUsuarioCreador = usuarioByUsIdUsuarioCreador;
	}

	@Column(name = "usNombreDeUsuario", nullable = false, length = 50)
	public String getUsNombreDeUsuario() {
		return this.usNombreDeUsuario;
	}

	public void setUsNombreDeUsuario(String usNombreDeUsuario) {
		this.usNombreDeUsuario = usNombreDeUsuario;
	}

	@Column(name = "usClave", nullable = false, length = 50)
	public String getUsClave() {
		return this.usClave;
	}

	public void setUsClave(String usClave) {
		this.usClave = usClave;
	}

	@Column(name = "usCorreo", nullable = false, length = 90)
	public String getUsCorreo() {
		return this.usCorreo;
	}

	public void setUsCorreo(String usCorreo) {
		this.usCorreo = usCorreo;
	}

	@Column(name = "usNombres", nullable = false, length = 60)
	public String getUsNombres() {
		return this.usNombres;
	}

	public void setUsNombres(String usNombres) {
		this.usNombres = usNombres;
	}

	@Column(name = "usApellidos", nullable = false, length = 60)
	public String getUsApellidos() {
		return this.usApellidos;
	}

	public void setUsApellidos(String usApellidos) {
		this.usApellidos = usApellidos;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "usFechaCreacion", nullable = false, length = 26)
	public Date getUsFechaCreacion() {
		return this.usFechaCreacion;
	}

	public void setUsFechaCreacion(Date usFechaCreacion) {
		this.usFechaCreacion = usFechaCreacion;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "usUltimaActualizacion", nullable = false, length = 26)
	public Date getUsUltimaActualizacion() {
		return this.usUltimaActualizacion;
	}

	public void setUsUltimaActualizacion(Date usUltimaActualizacion) {
		this.usUltimaActualizacion = usUltimaActualizacion;
	}

	@Lob @Basic(fetch = FetchType.LAZY)
	@Column(name = "usImagen", columnDefinition="BLOB NULL")
	public byte[] getUsImagen() {
		return this.usImagen;
	}

	public void setUsImagen(byte[] usImagen) {
		this.usImagen = usImagen;
	}

	@Column(name = "usEstado", nullable = false, length = 50)
	public String getUsEstado() {
		return this.usEstado;
	}

	public void setUsEstado(String usEstado) {
		this.usEstado = usEstado;
	}

	@Column(name = "usDireccion", length = 200)
	public String getUsDireccion() {
		return this.usDireccion;
	}

	public void setUsDireccion(String usDireccion) {
		this.usDireccion = usDireccion;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "usRol_rolId", nullable = false)
	public Rol getRol() {
		return this.rol;
	}

	public void setRol(Rol rol) {
		this.rol = rol;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "usTipoDocumento_tdId")
	public Tipodocumento getTipodocumento() {
		return this.tipodocumento;
	}

	public void setTipodocumento(Tipodocumento tipodocumento) {
		this.tipodocumento = tipodocumento;
	}

	@Column(name = "usTelefono")
	public Integer getUsTelefono() {
		return this.usTelefono;
	}

	public void setUsTelefono(Integer usTelefono) {
		this.usTelefono = usTelefono;
	}

	@Column(name = "usDocumento", length = 45)
	public String getUsDocumento() {
		return this.usDocumento;
	}

	public void setUsDocumento(String usDocumento) {
		this.usDocumento = usDocumento;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByPedClienteCliId")
	public Set<Pedido> getPedidosForPedClienteCliId() {
		return this.pedidosForPedClienteCliId;
	}

	public void setPedidosForPedClienteCliId(Set<Pedido> pedidosForPedClienteCliId) {
		this.pedidosForPedClienteCliId = pedidosForPedClienteCliId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByPedAutorizador")
	public Set<Pedido> getPedidosForPedAutorizador() {
		return this.pedidosForPedAutorizador;
	}

	public void setPedidosForPedAutorizador(Set<Pedido> pedidosForPedAutorizador) {
		this.pedidosForPedAutorizador = pedidosForPedAutorizador;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByUsUsuarioActualizador")
	public Set<Usuario> getUsuariosForUsUsuarioActualizador() {
		return this.usuariosForUsUsuarioActualizador;
	}

	public void setUsuariosForUsUsuarioActualizador(Set<Usuario> usuariosForUsUsuarioActualizador) {
		this.usuariosForUsUsuarioActualizador = usuariosForUsUsuarioActualizador;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarioByUsIdUsuarioCreador")
	public Set<Usuario> getUsuariosForUsIdUsuarioCreador() {
		return this.usuariosForUsIdUsuarioCreador;
	}

	public void setUsuariosForUsIdUsuarioCreador(Set<Usuario> usuariosForUsIdUsuarioCreador) {
		this.usuariosForUsIdUsuarioCreador = usuariosForUsIdUsuarioCreador;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	public Set<Fichaanaliticamateria> getFichaanaliticamaterias() {
		return this.fichaanaliticamaterias;
	}

	public void setFichaanaliticamaterias(Set<Fichaanaliticamateria> fichaanaliticamaterias) {
		this.fichaanaliticamaterias = fichaanaliticamaterias;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	public Set<Fichaelaboracionproducto> getFichaelaboracionproductos() {
		return this.fichaelaboracionproductos;
	}

	public void setFichaelaboracionproductos(Set<Fichaelaboracionproducto> fichaelaboracionproductos) {
		this.fichaelaboracionproductos = fichaelaboracionproductos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	public Set<Movimientoproducto> getMovimientoproductos() {
		return this.movimientoproductos;
	}

	public void setMovimientoproductos(Set<Movimientoproducto> movimientoproductos) {
		this.movimientoproductos = movimientoproductos;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	public Set<Lote> getLotes() {
		return this.lotes;
	}

	public void setLotes(Set<Lote> lotes) {
		this.lotes = lotes;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	public Set<Movimientomateria> getMovimientomaterias() {
		return this.movimientomaterias;
	}

	public void setMovimientomaterias(Set<Movimientomateria> movimientomaterias) {
		this.movimientomaterias = movimientomaterias;
	}

}
