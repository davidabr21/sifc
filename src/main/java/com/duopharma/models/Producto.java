package com.duopharma.models;
// Generated 6/02/2020 04:23:00 PM by Hibernate Tools 4.3.5.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Transient;

/**
 * Producto generated by hbm2java
 */
@Entity
@Table(name = "producto", catalog = "sifc_dev")
public class Producto implements java.io.Serializable {

	private Integer proId;
	private Tipoproducto tipoproducto;
	private Unidadmedida unidadmedida;
	private String proNombre;
	private int proCantidad;
	private int proContenido;
	private String proDescripcion;
	private int proPrecio;
	
	@Transient
	private Integer umId;
	@Transient
	private Integer tpId;
	
	private Set<Imagenporproducto> imagenporproductos = new HashSet<Imagenporproducto>(0);
	private Set<Lote> lotes = new HashSet<Lote>(0);
	private Set<Estanteria> estanterias = new HashSet<Estanteria>(0);
	private Formafarmaceutica formafarmaceutica;
	private Set<Movimientoproducto> movimientoproductos = new HashSet<Movimientoproducto>(0);
	private Set<Prospecto> prospectos = new HashSet<Prospecto>(0);
	private Set<Productosporpedido> productosporpedidos = new HashSet<Productosporpedido>(0);

	public Producto() {
		
	}

	public Producto(Tipoproducto tipoproducto, Unidadmedida unidadmedida, String proNombre, int proContenido,
			int proPrecio) {
		this.tipoproducto = tipoproducto;
		this.unidadmedida = unidadmedida;
		this.proNombre = proNombre;
		this.proContenido = proContenido;
		this.proPrecio = proPrecio;
	}

	public Producto(Tipoproducto tipoproducto, Unidadmedida unidadmedida, String proNombre, int proContenido,
			String proDescripcion, int proPrecio, Set<Imagenporproducto> imagenporproductos, Set<Lote> lotes,
			Set<Estanteria> estanterias, Formafarmaceutica formafarmaceutica,
			Set<Movimientoproducto> movimientoproductos, Set<Prospecto> prospectos,
			Set<Productosporpedido> productosporpedidos) {
		this.tipoproducto = tipoproducto;
		this.unidadmedida = unidadmedida;
		this.proNombre = proNombre;
		this.proContenido = proContenido;
		this.proDescripcion = proDescripcion;
		this.proPrecio = proPrecio;
		this.imagenporproductos = imagenporproductos;
		this.lotes = lotes;
		this.estanterias = estanterias;
		this.formafarmaceutica = formafarmaceutica;
		this.movimientoproductos = movimientoproductos;
		this.prospectos = prospectos;
		this.productosporpedidos = productosporpedidos;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "proId", unique = true, nullable = false)
	public Integer getProId() {
		return this.proId;
	}

	public void setProId(Integer proId) {
		this.proId = proId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "proTipoProducto_tpId", nullable = false)
	public Tipoproducto getTipoproducto() {
		return this.tipoproducto;
	}

	public void setTipoproducto(Tipoproducto tipoproducto) {
		this.tipoproducto = tipoproducto;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "proUnidadMedida_umId", nullable = false)
	public Unidadmedida getUnidadmedida() {
		return this.unidadmedida;
	}

	public void setUnidadmedida(Unidadmedida unidadmedida) {
		this.unidadmedida = unidadmedida;
	}

	@Column(name = "proNombre", nullable = false, length = 45)
	public String getProNombre() {
		return this.proNombre;
	}

	public void setProNombre(String proNombre) {
		this.proNombre = proNombre;
	}
	
	@Column(name = "proCantidad", nullable = false)
	public int getProCantidad() {
		return this.proCantidad;
	}

	public void setProCantidad(int proCantidad) {
		this.proCantidad = proCantidad;
	}

	@Column(name = "proContenido", nullable = false)
	public int getProContenido() {
		return this.proContenido;
	}

	public void setProContenido(int proContenido) {
		this.proContenido = proContenido;
	}

	@Column(name = "proDescripcion", length = 65535)
	public String getProDescripcion() {
		return this.proDescripcion;
	}

	public void setProDescripcion(String proDescripcion) {
		this.proDescripcion = proDescripcion;
	}

	@Column(name = "proPrecio", nullable = false)
	public int getProPrecio() {
		return this.proPrecio;
	}

	public void setProPrecio(int proPrecio) {
		this.proPrecio = proPrecio;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "producto")
	public Set<Imagenporproducto> getImagenporproductos() {
		return this.imagenporproductos;
	}

	public void setImagenporproductos(Set<Imagenporproducto> imagenporproductos) {
		this.imagenporproductos = imagenporproductos;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "producto")
	public Set<Lote> getLotes() {
		return this.lotes;
	}

	public void setLotes(Set<Lote> lotes) {
		this.lotes = lotes;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "producto")
	public Set<Estanteria> getEstanterias() {
		return this.estanterias;
	}

	public void setEstanterias(Set<Estanteria> estanterias) {
		this.estanterias = estanterias;
	}

	@OneToOne(fetch = FetchType.EAGER, mappedBy = "producto")
	public Formafarmaceutica getFormafarmaceutica() {
		return this.formafarmaceutica;
	}

	public void setFormafarmaceutica(Formafarmaceutica formafarmaceutica) {
		this.formafarmaceutica = formafarmaceutica;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "producto")
	public Set<Movimientoproducto> getMovimientoproductos() {
		return this.movimientoproductos;
	}

	public void setMovimientoproductos(Set<Movimientoproducto> movimientoproductos) {
		this.movimientoproductos = movimientoproductos;
	}

	@ManyToMany(fetch = FetchType.EAGER)
	@JoinTable(name = "prospectosporproducto", catalog = "sifc_dev", joinColumns = {
			@JoinColumn(name = "ppProducto_proId", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "ppProspecto_prsId", nullable = false, updatable = false) })
	public Set<Prospecto> getProspectos() {
		return this.prospectos;
	}

	public void setProspectos(Set<Prospecto> prospectos) {
		this.prospectos = prospectos;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "producto")
	public Set<Productosporpedido> getProductosporpedidos() {
		return this.productosporpedidos;
	}

	public void setProductosporpedidos(Set<Productosporpedido> productosporpedidos) {
		this.productosporpedidos = productosporpedidos;
	}
	
	@Transient
	public Integer getUmId() {
		return umId;
	}

	@Transient
	public void setUmId(Integer umId) {
		this.umId = umId;
	}
	@Transient
	public Integer getTpId() {
		return tpId;
	}
	@Transient
	public void setTpId(Integer tpId) {
		this.tpId = tpId;
	}

}
